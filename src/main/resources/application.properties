spring.mvc.view.prefix = /WEB-INF/jsp/
spring.mvc.view.suffix = .jsp
server.servlet.context-path = /	

spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
# spring.http.multipart.enabled=false

valor.minuto.monitoramento = 0.25
valor.minuto.atendimento = 0.11

aws.clientRegion = us-east-2
aws.bucketName = ixia-files 

ixia.sistema.escala.email={ixia_sistema_escala_email}
ixia.sistema.escala.senha={ixia_sistema_escala_senha}
ixia.sistema.escala.smtp=smtp.gmail.com
ixia.sistema.escala.port=465
ixia.sistema.escala.socket=javax.net.ssl.SSLSocketFactory
ixia.sistema.escala.auth=true

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/SistemaControleEscala?autoReconnect=true&useSSL=false
spring.datasource.username = root
spring.datasource.password = 3004.Dam
spring.jpa.database-platform = org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=30000

# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true